openapi: 3.0.0
info:
  title: Orders API
  description: API for managing orders and products
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: Local development server

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        totalItems:
          type: integer
        totalPrice:
          type: number
        status:
          type: string
          enum: [PENDING, PROCESSING, COMPLETED, CANCELLED]
        deliveryMethod:
          type: string
        shippingAddress:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /orders:
    post:
      summary: Create a new order
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      productID:
                        type: integer
                      quantity:
                        type: integer
                deliveryMethod:
                  type: string
                shippingAddress:
                  type: string
                paymentGatewayProvider:
                  type: string
                paymentMethod:
                  type: string
                paymentMode:
                  type: string
      responses:
        201:
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Bad request
        401:
          description: Unauthorized
    
    get:
      summary: Get all orders
      tags: [Orders]
      parameters:
        - in: query
          name: status
          schema:
            type: string
          description: Filter orders by status
      responses:
        200:
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        401:
          description: Unauthorized

  /orders/{id}:
    get:
      summary: Get order by ID
      tags: [Orders]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Order ID
      responses:
        200:
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found